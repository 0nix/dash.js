{"name":"Dash.js","tagline":"A reference client implementation for the playback of MPEG DASH via Javascript and compliant browsers.","body":"### Demo\r\nFind the latest working version of the player [here](http://dashif.org/reference/players/javascript/index.html).\r\n\r\n### What\r\ndash.js is an initiative to establish a production quality framework for building video and audio players that play back MPEG-DASH content using client-side JavaScript libraries leveraging the [Media Source Extensions](https://dvcs.w3.org/hg/html-media/raw-file/tip/media-source/media-source.html) API set as defined by the W3C. The core objectives of this project are to build an open source Javascript library which\r\n* Is codec agnostic\r\n* Allows for multiple segment encapsulation types\r\n* Allows for multiple content protection schema\r\n* Allows for simple substitution of switching rules, loading methods and fail-over/down logic\r\n\r\nThe initial implementation will build upon this flexibility to produce a player which matches the [DASH264](http://dashif.org/guidelines/DASH264-base-v09.pdf) recommendation of the DASH-IF, namely:\r\n* Uses H.264 for video and HE-AAC for audio\r\n* Base Media File Format segments\r\n* isoff-on-demand:2011 and isoff-live2011 profile support\r\n* time-aligned, closed-GOP segments whose duration does not vary more than 25% from the mean\r\n* SMPTE-TT captioning\r\n* CENC DRM support\r\n\r\n\r\n### Why\r\nHTTP Adaptive streaming provides for robust streaming, with random access, that adjusts to changes in throughput to avoid rebuffering. Use of HTTP:80 allows for transit across most networks, proxies and firewalls. MPEG-DASH provides an ISO standard [ISO/IEC 23009-1](http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=57623) which combines the best features of Apple's HLS, Adobe's HDS and Microsoft Smooth Streaming in to a modern format that is flexible enough to handle mutiple addressing schemes, TS and BMFF support for segment encapsulation,  multi-track video and audio, timed metadata and advertising insertion. Rather than require that each browser support DASH directly, the Media Source Extensions expose an interface to the HTML Media element to allow the ad-hoc addition of media segments. This allows client-side script to parse manifests, request segments and apply switching logic while leaving the video decoding and rendering to the browser. The combination is a flexible and powerful platform on which to build cross-platform media players. \r\n\r\n### By whom\r\nThis project is organized by the [Dash Industry Forum](http://dashif.org), a non-profit industry association established to catalyze the adoption of MPEG-DASH. [Membership](http://dashif.org/members/) includes many large media companies, including Microsoft, Qualcomm, Ericsson, Adobe, Sony, Cisco, Intel and Akamai. \r\n\r\n### License\r\nAll code in this repository is covered by the [BSD-3 license](http://opensource.org/licenses/BSD-3-Clause). This permissive license allows redistribution and use in source and binary forms, with or without modification, without cost or any license fees. It is our intent that you use this code to freely build DASH players for personal, company internal, or commercial purposes.\r\n\r\n### Email list\r\nThis project communicates via the 'dashjs' Google group.  You may apply to join the email list by visiting [https://groups.google.com/d/forum/dashjs](https://groups.google.com/d/forum/dashjs).\r\n\r\n---\r\n\r\n### Welcome to GitHub Pages.\r\nWill was here. This automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}